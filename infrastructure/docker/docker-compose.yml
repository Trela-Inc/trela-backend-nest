version: '3.8'

services:
  # --- PostgreSQL Databases (one per service) ---
  postgres_auth:
    image: postgres:15
    container_name: postgres_auth
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
    ports:
      - '5433:5432'
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    networks:
      - backend

  postgres_user:
    image: postgres:15
    container_name: postgres_user
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: user_user
      POSTGRES_PASSWORD: user_pass
    ports:
      - '5434:5432'
    volumes:
      - postgres_user_data:/var/lib/postgresql/data
    networks:
      - backend

  postgres_property:
    image: postgres:15
    container_name: postgres_property
    environment:
      POSTGRES_DB: property_db
      POSTGRES_USER: property_user
      POSTGRES_PASSWORD: property_pass
    ports:
      - '5435:5432'
    volumes:
      - postgres_property_data:/var/lib/postgresql/data
    networks:
      - backend

  # Add more PostgreSQL containers as needed for other services

  # --- Kafka & Zookeeper ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - backend

  # --- Redis ---
  redis:
    image: redis:7
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - backend

  # --- Jaeger (Distributed Tracing) ---
  jaeger:
    image: jaegertracing/all-in-one:1.53
    container_name: jaeger
    ports:
      - '16686:16686' # UI
      - '6831:6831/udp' # Agent
      - '6832:6832/udp'
      - '5778:5778'
      - '14268:14268'
      - '14250:14250'
      - '9411:9411'
    networks:
      - backend

  # --- Prometheus ---
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - backend

  # --- Grafana ---
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_auth_data:
  postgres_user_data:
  postgres_property_data:
  # Add more volumes for other PostgreSQL services as needed 